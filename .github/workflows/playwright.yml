name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: windows-latest

    # ðŸ‘‡ Default ENV (can be overridden in workflow_dispatch)
    env:
      ENV: DEV

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Set environment variables from secrets
      shell: pwsh
      run: |
        if ($env:ENV -eq "DEV") {
          echo "BASE_URL=${{ secrets.DEV_URL }}" >> $env:GITHUB_ENV
          echo "ADMIN_EMAIL=${{ secrets.DEV_ADMIN_EMAIL }}" >> $env:GITHUB_ENV
          echo "ADMIN_PASSWORD=${{ secrets.DEV_ADMIN_PASSWORD }}" >> $env:GITHUB_ENV
        } elseif ($env:ENV -eq "UAT") {
          echo "BASE_URL=${{ secrets.UAT_URL }}" >> $env:GITHUB_ENV
          echo "ADMIN_EMAIL=${{ secrets.UAT_ADMIN_EMAIL }}" >> $env:GITHUB_ENV
          echo "ADMIN_PASSWORD=${{ secrets.UAT_ADMIN_PASSWORD }}" >> $env:GITHUB_ENV
        } elseif ($env:ENV -eq "PROD") {
          echo "BASE_URL=${{ secrets.PROD_URL }}" >> $env:GITHUB_ENV
          echo "ADMIN_EMAIL=${{ secrets.PROD_ADMIN_EMAIL }}" >> $env:GITHUB_ENV
          echo "ADMIN_PASSWORD=${{ secrets.PROD_ADMIN_PASSWORD }}" >> $env:GITHUB_ENV
        }

    - name: Run Playwright tests
      run: |
        echo "Running tests on $env:ENV ($env:BASE_URL)"
        npx playwright test --reporter=html

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
